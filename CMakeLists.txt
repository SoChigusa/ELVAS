cmake_minimum_required(VERSION 3.0)

option(USE_TCMALLOC "Use tcmalloc" OFF)

find_package(Boost 1.59.0 COMPONENTS system program_options)

if(WIN32)
  add_definitions(${Boost_LIB_DIAGNOSTIC_DEFINITIONS})
endif()

if(Boost_FOUND)
  include_directories(${Boost_INCLUDE_DIRS})
  link_directories(${Boost_LIBRARY_DIRS})
endif()

add_executable(elvas
src/main.cpp src/elvas.cpp src/elvas_script.cpp
src/interpreter.cpp src/evaluator.cpp)

if(Boost_FOUND)
  target_link_libraries(elvas ${Boost_LIBRARIES})
endif()

if(USE_TCMALLOC)
  target_link_libraries(elvas tcmalloc)
endif()

set(CMAKE_BUILD_TYPE Release)

if(CMAKE_CXX_COMPILER_ID MATCHES "Clang")
  if(NOT CMAKE_CXX_COMPILER_VERSION LESS 3.5)
    set(CMAKE_CXX_FLAGS "-std=c++1z -Wno-parentheses")
  elseif(NOT CMAKE_CXX_COMPILER_VERSION LESS 3.2)
    set(CMAKE_CXX_FLAGS "-std=c++1y -Wno-parentheses")
  else()
    message("ERROR! Compiler should support C++14")
  endif()
elseif(CMAKE_CXX_COMPILER_ID MATCHES "GNU")
  if(NOT CMAKE_CXX_COMPILER_VERSION LESS 7.1)
    set(CMAKE_CXX_FLAGS "-std=c++17")
  elseif(NOT CMAKE_CXX_COMPILER_VERSION LESS 6.1)
    set(CMAKE_CXX_FLAGS "-std=c++1z")
  elseif(NOT CMAKE_CXX_COMPILER_VERSION LESS 5.1)
    set(CMAKE_CXX_FLAGS "-std=c++14")
  elseif(NOT CMAKE_CXX_COMPILER_VERSION LESS 4.8)
    set(CMAKE_CXX_FLAGS "-std=c++1y")
  else()
    message("ERROR! Compiler should support C++14")
  endif()
elseif(CMAKE_CXX_COMPILER_ID MATCHES "Intel")
  if(NOT CMAKE_CXX_COMPILER_VERSION LESS 18.0.0)
    set(CMAKE_CXX_FLAGS "-std=c++17")
  elseif(NOT CMAKE_CXX_COMPILER_VERSION LESS 15.0.2)
    set(CMAKE_CXX_FLAGS "-std=c++14")
  else()
    message("ERROR! Compiler should support C++14")
  endif()
elseif(CMAKE_CXX_COMPILER_ID MATCHES "xMSVC")
  if(NOT CMAKE_CXX_COMPILER_VERSION LESS 18.0.0)
    set(CMAKE_CXX_FLAGS "/Qstd=c++17")
  elseif(NOT CMAKE_CXX_COMPILER_VERSION LESS 16.0)
    set(CMAKE_CXX_FLAGS "/Qstd=c++14")
  else()
    message("ERROR! Compiler should support C++14")
  endif()
elseif(CMAKE_CXX_COMPILER_ID MATCHES "MSVC")
  if(NOT CMAKE_CXX_COMPILER_VERSION LESS 15.3)
    set(CMAKE_CXX_FLAGS "/std:c++17 /EHsc")
  elseif(NOT CMAKE_CXX_COMPILER_VERSION LESS 14.1)
    set(CMAKE_CXX_FLAGS "/std:c++latest /EHsc")
  elseif(NOT CMAKE_CXX_COMPILER_VERSION LESS 14.0)
    set(CMAKE_CXX_FLAGS "/std:c++14 /EHsc")
  else()
    message("ERROR! Compiler should support C++14")
  endif()
else()
  message("Compiler flags may not work. If not, modify CMakeLists.txt.")
  set(CMAKE_CXX_FLAGS "-std=c++14")
endif()

